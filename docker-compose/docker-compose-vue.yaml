version: "3.9"

name: adempiere-ui-gateway

# Example API for images
services:
  adempiere.database:
    build:
      context: postgresql/
      dockerfile: Dockerfile
    container_name: ${POSTGRES_HOST}
    image: ${POSTGRES_HOST}
    restart: ${GENERIC_RESTART}
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5432; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - shared_network

  adempiere.grpc.server:
    image: ${GRPC_SERVER_IMAGE}
    container_name: ${GRPC_SERVER_HOST}
    restart: ${GENERIC_RESTART}
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/50059; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    depends_on:
      adempiere.database:
        condition: service_healthy
    environment:
      DB_HOST: ${GRPC_SERVER_DB_HOST}
      DB_NAME: ${GRPC_SERVER_DB_NAME}
      DB_PASSWORD: ${GRPC_SERVER_DB_PASSWORD}
      # JWT_SECRET_KEY: ${GRPC_SERVER_JWT_SECRET_KEY}
      # SERVICES_ENABLED: ${GRPC_SERVER_SERVICES_ENABLED}
    networks:
      - shared_network

  grpc.proxy:
    image: ${GRPC_PROXY_BACKEND_IMAGE}
    container_name: ${GRPC_PROXY_NAME}
    depends_on:
      - adempiere.grpc.server
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5555; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    ports:
      - ${GRPC_PROXY_BACKEND_PORT}:5555
    environment:
      BACKEND_HOST: ${GRPC_PROXY_BACKEND_HOST}
      BACKEND_PORT: 50059
    networks:
      - shared_network

  ui.gateway:
    image: ${GATEWAY_IMAGE}
    container_name: ${GATEWAY_HOST}
    depends_on:
      grpc.proxy:
        condition: service_healthy
      # vue.ui:
      #   condition: service_healthy
    ports:
      - ${GATEWAY_PORT}:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/upstreams/adempiere_backend.conf:/etc/nginx/api_upstreams_conf.d/adempiere_backend.conf
      - ./nginx/upstreams/adempiere_frontend.conf:/etc/nginx/api_upstreams_conf.d/adempiere_frontend.conf
      - ./nginx/api/backend/:/etc/nginx/api_conf.d/backend
      - ./nginx/gateway/api_gateway_vue.conf:/etc/nginx/api_gateway.conf
      - ./nginx/api_json_errors.conf:/etc/nginx/api_json_errors.conf
      #- ./keys/api_keys.conf:/etc/nginx/api_keys.conf
    networks:
      - shared_network

  vue.ui:
    image: ${VUE_UI_IMAGE}
    container_name: ${VUE_UI_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - ${VUE_UI_PORT}:80
    environment:
      API_URL: ${VUE_UI_API_URL}
      # PUBLIC_PATH: ${VUE_UI_PUBLIC_PATH}
    networks:
      - shared_network


networks:
  shared_network:
    name: ${DEFAULT_NETWORK}


volumes:
  volume_nginx:
    name: ${GATEWAY_VOLUME}
  volume_postgres:
    name: ${POSTGRES_VOLUME}

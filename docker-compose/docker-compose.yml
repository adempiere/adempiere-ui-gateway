version: "0.0.1"
# Example API for images
services:
  adempiere.database:
    build:
      context: postgresql/
      dockerfile: Dockerfile
    container_name: ${POSTGRES_NAME}
    image: ${POSTGRES_NAME}
    restart: ${GENERIC_RESTART}
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5432; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - shared_network

  adempiere.grpc.server:
    image: ${ADEMPIERE_GRPC_SERVER_IMAGE}
    container_name: ${ADEMPIERE_GRPC_HOST}
    restart: ${GENERIC_RESTART}
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/50059; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      DB_HOST: ${POSTGRES_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SERVICES_ENABLED: ${SERVICES_ENABLED}
    depends_on:
      adempiere.database:
        condition: service_healthy
    networks:
      - shared_network

  adempiere.middleware:
    image: ${ADEMPIERE_MIDDLEWARE_IMAGE}
    container_name: ${ADEMPIERE_MIDDLEWARE_HOST}
    restart: ${GENERIC_RESTART}
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/50059; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      DB_HOST: ${POSTGRES_NAME}
      SERVER_PORT: ${ADEMPIERE_MIDDLEWARE_PORT}
    depends_on:
      adempiere.database:
        condition: service_healthy
    networks:
      - shared_network

  grpc.proxy:
      image: ${ENVOY_IMAGE_NAME}
      container_name: ${ENVOY_NAME}
      volumes:
          - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
          - ./envoy/definitions/adempiere-grpc-server.pb:/data/adempiere-grpc-server.pb:ro
          - ./envoy/definitions/adempiere-middleware.pb:/data/adempiere-middleware.pb:ro
      depends_on:
        - adempiere.grpc.server
        - adempiere.middleware
      networks:
        - shared_network

  ui.gateway:
      image: ${NGINX_IMAGE_NAME}
      container_name: ${NGINX_NAME}
      depends_on:
        - grpc.proxy
      ports:
          - ${NGINX_PORT}:80
      volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf
          - ./backend/:/etc/nginx/api_backend_conf.d
          - ./api/:/etc/nginx/api_conf.d
          - ./gateway/api_gateway.conf:/etc/nginx/api_gateway.conf
          - ./api_json_errors.conf:/etc/nginx/api_json_errors.conf
          #- ./keys/api_keys.conf:/etc/nginx/api_keys.conf
      networks:
        - shared_network

networks:
  shared_network:
    name: ${DEFAULT_NETWORK}

volumes:
  volume_nginx:
    name: ${NGINX_VOLUME}
  volume_envoy:
    name: ${ENVOY_VOLUME}
  volume_postgres:
    name: ${POSTGRES_VOLUME}

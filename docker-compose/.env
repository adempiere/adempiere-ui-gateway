# Containers Stack
# COMPOSE_PROJECT_NAME: This is the actual Project name. The result of calling "docker compose convert" oder "docker compose ls"
CLIENT_NAME="adempiere-ui"
COMPOSE_PROJECT_NAME=${CLIENT_NAME}-gateway

# URL settings
HOST_IP=api.adempiere.io
HOST_URL=http://${HOST_IP}

# Generic Restart
GENERIC_RESTART="on-failure"

# Network
ADEMPIERE_NETWORK=${COMPOSE_PROJECT_NAME}.network
NETWORK_SUBNET=192.168.100.0/24
NETWORK_GATEWAY=192.168.100.1
NETWORK_IP_RANGE=192.168.10.0/24
ALLOWED_ORIGIN=${HOST_IP}

# Synchronize timezone of containers with timezone of hosts
TIMEZONE_PATH_ON_HOST="/etc/timezone"
TIMEZONE_PATH_ON_CONTAINER="/etc/timezone"
TIMEZONE_OPTIONS="ro"

# Synchronize local time of containers with local time of hosts
LOCALTIME_PATH_ON_HOST="/etc/localtime"
LOCALTIME_PATH_ON_CONTAINER="/etc/localtime"
LOCALTIME_OPTIONS="ro"

# Docker variables
DOCKERFILE_NAME=postgres.Dockerfile
HOME_PATH_ON_CONTAINERS=/home/adempiere
ADEMPIERE_GITHUB_VERSION=3.9.4
ADEMPIERE_GITHUB_COMPRESSED_FILE=Adempiere_394LTS.tar.gz
ADEMPIERE_GITHUB_ARTIFACT=https://github.com/adempiere/adempiere/releases/download/${ADEMPIERE_GITHUB_VERSION}/${ADEMPIERE_GITHUB_COMPRESSED_FILE}


# SQL Database
POSTGRES_IMAGE="postgres:13"
POSTGRES_CONTAINER_NAME=${COMPOSE_PROJECT_NAME}.postgresql
POSTGRES_HOSTNAME=${CLIENT_NAME}.postgresql
POSTGRES_USER="postgres"
POSTGRES_PASSWORD="postgres"
POSTGRES_PORT="5432"
POSTGRES_EXTERNAL_PORT="55432"
POSTGRES_DEFAULT_DB_PATH_ON_CONTAINER=/var/lib/postgresql/data
POSTGRES_DB_BACKUP_PATH_ON_CONTAINER=${HOME_PATH_ON_CONTAINERS}/postgres_backups
POSTGRES_CONTEXT_PATH_ON_HOST=${PWD}/postgresql
POSTGRES_DB_PATH_ON_HOST=${POSTGRES_CONTEXT_PATH_ON_HOST}/postgres_database
POSTGRES_BACKUP_PATH_ON_HOST=${POSTGRES_CONTEXT_PATH_ON_HOST}/postgres_backups
POSTGRES_RESTORE_FILE_NAME=seed.backup
POSTGRES_DEFAULT_RESTORE_FILE=${POSTGRES_DB_BACKUP_PATH_ON_CONTAINER}/${POSTGRES_RESTORE_FILE_NAME}
POSTGRES_IMAGE_REPO_NAME=${COMPOSE_PROJECT_NAME}.virtual_repo.pg
POSTGRES_VOLUME=${COMPOSE_PROJECT_NAME}.volume_postgres_db
BACKUPS_VOLUME=${COMPOSE_PROJECT_NAME}.volume_postgres_backups

# Generic Database ADempiere values
ADEMPIERE_DB_NAME=adempiere
ADEMPIERE_DB_USER="adempiere"
ADEMPIERE_DB_PASSWORD="adempiere"


# S3 Minio Storage
S3_VERSION="RELEASE.2024-01-31T20-20-33Z"
S3_IMAGE="quay.io/minio/minio:${S3_VERSION}"
S3_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.s3.storage"
S3_HOSTNAME="${CLIENT_NAME}.s3"
S3_PORT=9000
S3_EXTERNAL_PORT=${S3_PORT}
S3_CONSOLE_PORT=9090 # UI Management
S3_CONSOLE_EXTERNAL_PORT=${S3_CONSOLE_PORT} # UI Management
S3_CONSOLE_BROWSER_REDIRECT_URL="http://localhost/s3/console"
S3_USER=${ADEMPIERE_DB_USER}
S3_PASSWORD=${ADEMPIERE_DB_PASSWORD}
S3_BUCKET_NAME=${ADEMPIERE_DB_NAME}
S3_VOLUME="${COMPOSE_PROJECT_NAME}.volume_s3"

# S3 Minio Client to create default bucket
S3_CLIENT_VERSION="RELEASE.2024-01-31T08-59-40Z"
S3_CLIENT_IMAGE="minio/mc:${S3_CLIENT_VERSION}"
S3_CLIENT_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.s3.client"
S3_CLIENT_HOSTNAME="${CLIENT_NAME}.s3.client"
S3_CLIENT_ACCESS_KEY="${S3_USER}"
S3_CLIENT_SECRET_KEY="${S3_PASSWORD}"
S3_CLIENT_BUCKET_NAME="${S3_BUCKET_NAME}"

# S3 Gateway RS
S3_GATEWAY_RS_VERSION="1.0.9"
S3_GATEWAY_RS_IMAGE="openls/s3-gateway-rs:${S3_GATEWAY_RS_VERSION}"
S3_GATEWAY_RS_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.s3.gateway.rs"
S3_GATEWAY_RS_HOSTNAME="${CLIENT_NAME}.s3.rs"
S3_GATEWAY_RS_PORT=7879
S3_GATEWAY_RS_EXTERNAL_PORT=${S3_GATEWAY_RS_PORT}
S3_GATEWAY_RS_S3_URL="http://s3.storage:9000" # Public dns or path to upload signed files
S3_GATEWAY_RS_API_KEY="${S3_USER}"
S3_GATEWAY_RS_SECRET_KEY="${S3_PASSWORD}"
S3_GATEWAY_RS_BUCKET_NAME="${S3_BUCKET_NAME}"


# Main Page
ADEMPIERE_SITE_IMAGE="openls/adempiere-landing-page:alpine-1.0.3"
ADEMPIERE_SITE_CONTAINER_NAME=${COMPOSE_PROJECT_NAME}.site
ADEMPIERE_SITE_HOSTNAME=${CLIENT_NAME}.site
ADEMPIERE_SITE_PORT=80                               # Internal port. Not configured yet in in docker-compose.yml. (original 1170)
ADEMPIERE_SITE_EXTERNAL_PORT=8080                    # External Port. Not configured yet in in docker-compose.yml.
ADEMPIERE_SITE_VUE_URL=${HOST_URL}/vue
ADEMPIERE_SITE_ZK_URL=${HOST_URL}/webui
ADEMPIERE_SITE_SCHEDULER_URL=${HOST_URL}/ui


# Adempiere ZK UI
ADEMPIERE_ZK_IMAGE="openls/adempiere-zk-ui:jetty-1.0.8"
ADEMPIERE_ZK_CONTAINER_NAME=${COMPOSE_PROJECT_NAME}.zk
ADEMPIERE_ZK_HOSTNAME=${CLIENT_NAME}.zk
ADEMPIERE_ZK_PORT=8080                          # Internal port. Not configured yet in in docker-compose.yml. (original 1171)
ADEMPIERE_ZK_EXTERNAL_PORT=8888                 # External Port. Not configured yet in in docker-compose.yml.
ADEMPIERE_ZK_DB_CONTAINER_NAME=${POSTGRES_CONTAINER_NAME}
ADEMPIERE_ZK_DB_PORT=${POSTGRES_PORT}
ADEMPIERE_ZK_DB_NAME=${ADEMPIERE_DB_NAME}
ADEMPIERE_ZK_DB_USER=${ADEMPIERE_DB_USER}
ADEMPIERE_ZK_DB_PASSWORD=${ADEMPIERE_DB_PASSWORD}

# Adempiere ZK UI: Files to be persistent and thus shared between host and containers
PERSISTENT_FILES_VOLUME=${COMPOSE_PROJECT_NAME}.volume_persistent_files
ADEMPIERE_ZK_PERSISTENT_FILES_DIRECTORY_NAME=persistent_files
ADEMPIERE_ZK_PERSISTENT_FILES_PATH_ON_CONTAINER=${HOME_PATH_ON_CONTAINERS}/${ADEMPIERE_ZK_PERSISTENT_FILES_DIRECTORY_NAME}
ADEMPIERE_ZK_CONTEXT_PATH_ON_HOST=${POSTGRES_CONTEXT_PATH_ON_HOST}
ADEMPIERE_ZK_PERSISTENT_FILES_PATH_ON_HOST=${ADEMPIERE_ZK_CONTEXT_PATH_ON_HOST}/${ADEMPIERE_ZK_PERSISTENT_FILES_DIRECTORY_NAME}


# ADempiere Processors gRPC Server
ADEMPIERE_PROCESSOR_IMAGE="openls/adempiere-processors-service:alpine-1.0.2"
ADEMPIERE_PROCESSOR_CONTAINER_NAME=${COMPOSE_PROJECT_NAME}.processor
ADEMPIERE_PROCESSOR_HOSTNAME=${CLIENT_NAME}.processor
ADEMPIERE_PROCESSOR_PORT=50060
ADEMPIERE_PROCESSOR_DB_CONTAINER_NAME=${POSTGRES_CONTAINER_NAME}
ADEMPIERE_PROCESSOR_DB_PORT=${POSTGRES_PORT}
ADEMPIERE_PROCESSOR_DB_NAME=${ADEMPIERE_DB_NAME}
ADEMPIERE_PROCESSOR_DB_USER=${ADEMPIERE_DB_USER}
ADEMPIERE_PROCESSOR_DB_PASSWORD=${ADEMPIERE_DB_PASSWORD}


# dKron task scheduler
DKRON_IMAGE="dkron/dkron"
DKRON_CONTAINER_NAME=${COMPOSE_PROJECT_NAME}.scheduler.dkron
DKRON_HOSTNAME="${CLIENT_NAME}.dkron"
DKRON_PORT=8088
DKRON_EXTERNAL_PORT=8899                            # Not used yet in in docker-compose.yml.
DKRON_VOLUME="${COMPOSE_PROJECT_NAME}.volume_dkron"


# Zookeeper to manage kafka brokers
ZOOKEEPER_IMAGE="confluentinc/cp-zookeeper:latest"
ZOOKEEPER_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.zookeeper"
ZOOKEEPER_HOSTNAME="${CLIENT_NAME}.zookeeper"
ZOOKEEPER_PORT=2181
ZOOKEEPER_TICK_TIME=2000


# Kafka queue manager
KAFKA_BROKER_HOST="api.adempiere.io"
KAFKA_IMAGE="confluentinc/cp-kafka:latest"
KAFKA_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.kafka"
KAFKA_HOSTNAME="${CLIENT_NAME}.kafka"
KAFKA_PORT=29092


# ADempiere Vue Backend (gRPC Server)
VUE_BACKEND_GRPC_SERVER_IMAGE="solopcloud/adempiere-backend:alpine-3.0.0"
VUE_BACKEND_GRPC_SERVER_CONTAINER_NAME=${COMPOSE_PROJECT_NAME}.vue.grpc.server
VUE_BACKEND_GRPC_SERVER_HOSTNAME=${CLIENT_NAME}-grpc
VUE_BACKEND_GRPC_SERVER_DB_CONTAINER_NAME=${POSTGRES_CONTAINER_NAME}
VUE_BACKEND_GRPC_SERVER_DB_PORT=${POSTGRES_PORT}
VUE_BACKEND_GRPC_SERVER_DB_NAME=${ADEMPIERE_DB_NAME}
VUE_BACKEND_GRPC_SERVER_DB_USER=${ADEMPIERE_DB_USER}
VUE_BACKEND_GRPC_SERVER_DB_PASSWORD=${ADEMPIERE_DB_PASSWORD}
VUE_BACKEND_GRPC_SERVER_JWT_SECRET_KEY="08AE01B0AD3E7E0554F227ADE6C00E5D52382148F4FEA8CFA1AA7BE4D9B9DE05"
VUE_BACKEND_GRPC_SERVER_IS_ENABLED_ALL_SERVICES="true"      # Not used yet in in docker-compose.yml.
VUE_BACKEND_GRPC_SERVER_SERVICES_ENABLED="bank_statement_match; business; business_partner; core; \
	dashboarding; dictionary; enrollment; express_movement; express_receipt; \
	express_shipment; file_management; general_ledger; import_file_loader; \
	in_out; invoice; issue_management; location_address; log; match_po_receipt_invoice; \
	material_management; notice_management; order; payment; payment_allocation; payment_print_export; \
	payroll_action_notice; pos; product; record_management; report_management; \
	security; store; task_management; time_control; time_record; trial_balance_drillable; \
	user_customization; user_interface; workflow;"
VUE_BACKEND_GRPC_SERVER_LOG_LEVEL="WARNING"   # Available values: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL
VUE_BACKEND_GRPC_SERVER_PORT=50059


# Envoy Proxy Definition for Processors
ENVOY_GRPC_PROXY_IMAGE="envoyproxy/envoy:v1.27.0"
ENVOY_GRPC_PROXY_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.envoy.grpc.proxy"
ENVOY_GRPC_SERVER_PORT=50059
ENVOY_GRPC_PROXY_HOSTNAME="${CLIENT_NAME}.envoy"
ENVOY_GRPC_PROXY_BACKEND_IMAGE="solopcloud/adempiere-grpc-proxy:3.0.0"          # Used only in docker-compose-vue.yml.
ENVOY_GRPC_PROXY_EXTERNAL_PORT=5555
ENVOY_GRPC_PROXY_BACKEND_PORT=5555
ENVOY_GRPC_PROXY_BACKEND_HOST=${VUE_BACKEND_GRPC_SERVER_CONTAINER_NAME}         # Not used yet in in docker-compose.yml.
ENVOY_GRPC_PROXY_PROCESSOR_HOST=${ADEMPIERE_PROCESSOR_CONTAINER_NAME}           # Not used yet in in docker-compose.yml.
ENVOY_GRPC_PROXY_BACKEND_SERVER_PORT=${ENVOY_GRPC_SERVER_PORT}
ENVOY_GRPC_PROXY_PROCESSOR_PORT=5556


# NGINX UI Gateway
NGINX_UI_GATEWAY_IMAGE="nginx:1.25.2-alpine3.18"
NGINX_UI_GATEWAY_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.nginx.ui.gateway"
NGINX_UI_GATEWAY_HOSTNAME="${CLIENT_NAME}.nginx"
NGINX_UI_GATEWAY_EXTERNAL_PORT=80
NGINX_UI_GATEWAY_INTERNAL_PORT=80
NGINX_UI_GATEWAY_VOLUME="${COMPOSE_PROJECT_NAME}.volume_nginx"                 # Not used yet in in docker-compose.yml.


# ADempiere UI Vue
VUE_UI_IMAGE="solopcloud/adempiere-vue:alpine-3.4.8"
VUE_UI_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.vue.ui"
VUE_UI_HOSTNAME="${CLIENT_NAME}.vue.ui"
VUE_UI_PORT=9526
VUE_UI_API_URL=${HOST_URL}/api
VUE_UI_PUBLIC_PATH="/vue/"


# OpenSearch search engine
OPENSEARCH_IMAGE="opensearchproject/opensearch:2.11.1"
OPENSEARCH_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.opensearch"
OPENSEARCH_HOSTNAME="${CLIENT_NAME}.opensearch"
OPENSEARCH_PORT=9200
OPENSEARCH_PERFORMANCE_PORT=9600
OPENSEARCH_VOLUME="${COMPOSE_PROJECT_NAME}.volume_opensearch"

# OpenSearch restore db
OPENSEARCH_SETUP_IMAGE_REPO_NAME="${COMPOSE_PROJECT_NAME}.virtual_repo.opensearch_setup"
OPENSEARCH_SETUP_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.opensearch_setup"
OPENSEARCH_SETUP_HOSTNAME="${CLIENT_NAME}.opensearch_setup"


# OpenSearch API RESTful
OPENSEARCH_GATEWAY_RS_IMAGE="openls/opensearch-gateway-rs:1.0.8"
OPENSEARCH_GATEWAY_RS_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.opensearch.gateway.rs"
OPENSEARCH_GATEWAY_RS_HOSTNAME="${CLIENT_NAME}.opensearch.gateway"
OPENSEARCH_GATEWAY_RS_PORT=7879
OPENSEARCH_GATEWAY_RS_EXTERNAL_PORT=${OPENSEARCH_GATEWAY_RS_PORT}
OPENSEARCH_GATEWAY_RS_KAFKA_HOST="kafka:9092"
OPENSEARCH_GATEWAY_RS_OPENSEARCH_URL="http://${OPENSEARCH_CONTAINER_NAME}:${OPENSEARCH_PORT}"

# Keycloak identity and access management
# KEYCLOAK_IMAGE="jboss/keycloak:16.1.1"
KEYCLOAK_IMAGE="keycloak/keycloak:23.0.6-0"
KEYCLOAK_CONTAINER_NAME="${COMPOSE_PROJECT_NAME}.keycloak.service"
KEYCLOAK_HOSTNAME="${CLIENT_NAME}.keycloak"
KEYCLOAK_PORT=3333
KEYCLOAK_ADMIN="admin"
KEYCLOAK_ADMIN_PASSWORD="admin"
# keycloak DB
KEYCLOAK_DB_VENDOR="POSTGRES"
KEYCLOAK_DB_HOST=${POSTGRES_CONTAINER_NAME}
KEYCLOAK_DB_DATABASE="keycloak"
KEYCLOAK_DB_SCHEMA="public"

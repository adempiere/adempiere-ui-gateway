
  # For modes: DEVELOP
  kafka:
    image: ${KAFKA_IMAGE}
    container_name: ${KAFKA_CONTAINER_NAME}
    hostname: ${KAFKA_HOSTNAME}
    restart: ${GENERIC_RESTART}
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/${KAFKA_PORT}; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_BROKERCONNECT},PLAINTEXT_HOST://${KAFKA_BROKER_HOST}:${KAFKA_EXTERNAL_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    #ports:
      #- ${KAFKA_EXTERNAL_PORT}:${KAFKA_PORT}
    volumes:
      - ${TIMEZONE_PATH_ON_HOST}:${TIMEZONE_PATH_ON_CONTAINER}:${TIMEZONE_OPTIONS}    # Map the Timezone  of the host to the Timezone of the container
      - ${LOCALTIME_PATH_ON_HOST}:${LOCALTIME_PATH_ON_CONTAINER}:${LOCALTIME_OPTIONS} # Map the Localtime of the host to the Timezone of the container
    networks:
      - adempiere_network

  # For modes: DEVELOP
  kafdrop:
    image:  ${KAFDROP_IMAGE}
    container_name: ${KAFDROP_CONTAINER_NAME}
    hostname: ${KAFDROP_HOSTNAME}
    restart: ${GENERIC_RESTART}
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERCONNECT: ${KAFDROP_KAFKA_HOST}
    ports:
      - ${KAFDROP_EXTERNAL_PORT}:${KAFDROP_PORT}
    volumes:
      - ${TIMEZONE_PATH_ON_HOST}:${TIMEZONE_PATH_ON_CONTAINER}:${TIMEZONE_OPTIONS}    # Map the Timezone  of the host to the Timezone of the container
      - ${LOCALTIME_PATH_ON_HOST}:${LOCALTIME_PATH_ON_CONTAINER}:${LOCALTIME_OPTIONS} # Map the Localtime of the host to the Timezone of the container
    networks:
      - adempiere_network

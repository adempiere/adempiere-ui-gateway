include api_upstreams_conf.d/*.conf;
#include api_keys.conf;

server {
    access_log /var/log/nginx/api_access.log main; # Each API may also log to a 
                                                   # separate file

	listen [::]:80;
	listen *:80;
	# listen 0.0.0.0:80;
	# listen 127.0.0.1:80;
	listen localhost:80;

    # API definitions, one per file
    include api_conf.d/*.conf;
    include api_conf.d/**/*.conf;

    # Error responses
    error_page 404 = @400;         # Treat invalid paths as bad requests
    proxy_intercept_errors off;     # Do not send backend errors to client
    include api_json_errors.conf;  # API client-friendly JSON errors
    default_type application/json; # If no content-type, assume JSON
}

server {
    # Context for HTTPS (port 443)
    # You must first generate a certificate in the Host, for example with Letsencrypt.
    # Then, you must replace the text "YOUR_DOMAINNAME" with the name the certificate was issued for and uncomment the corresponding lines below.
    # The directives server_name, ssl_certificate and ssl_certificate_key must be uncommented and have the correct values for the HTTPS connection to work correctly.
    # Otherwise, there will be a connection error.
    # Do no forget to also open port 443 or HTTP protocol on the Host.

    access_log /var/log/nginx/api_access.log main; # Each API may also log to a separate file

    # Begin of Certificate suggestions by https://cipherlist.eu/
    listen 443 ssl;
    listen [::]:443 ssl;
    listen localhost:443;

    # Uncomment the following line and replace "YOUR_DOMAINNAME" with the DNS value of the HOST
    # server_name YOUR_DOMAINNAME;  # Here: the (sub)domain this server is referred as

    # Uncomment the following line and replace "YOUR_DOMAINNAME" with the DNS value of the HOST
    # ssl_certificate /etc/letsencrypt/live/YOUR_DOMAINNAME/fullchain.pem;   # Generated for (sub)domain on Host and mounted here

    # Uncomment the following line and replace "YOUR_DOMAINNAME" with the DNS value of the HOST
    # ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAINNAME/privkey.pem; # Generated for (sub)domain on Host and mounted here

    ssl_protocols TLSV1.2 TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
    ssl_prefer_server_ciphers on;

    # Uncomment the following line once you have generated a Diffie-Hellman key
    # ssl_dhparam /etc/nginx/dhparam.pem; # Diffie-Hellman generated on Host and mounted here: openssl dhparam -out /etc/nginx/dhparam.pem 4096

    ssl_ciphers EECDH+CHACHA20:EECDH+AESGCM:EDH+AESGCM;
    ssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256;
    ssl_conf_command Options PrioritizeChaCha;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver 8.8.8.8 8.8.4.4 valid=300s;  # Google. Choose as you please.
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    # End of Certificate suggestions by https://cipherlist.eu/

    # API definitions, one per file
    include api_conf.d/*.conf;
    include api_conf.d/**/*.conf;

    # Error responses
    error_page 404 = @400;         # Treat invalid paths as bad requests
    proxy_intercept_errors off;     # Do not send backend errors to client
    include api_json_errors.conf;  # API client-friendly JSON errors
    default_type application/json; # If no content-type, assume JSON
}
